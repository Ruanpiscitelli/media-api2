version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    sysctls:
      - net.core.somaxconn=2048
      - net.ipv4.ip_local_port_range=1024 65535
      - net.ipv4.tcp_tw_reuse=1
    ports:
      - "8000:8000"
      - "8188:8188"
      - "8001:8001"
    volumes:
      - models:/app/models:ro
      - custom_nodes:/app/custom_nodes:ro
      - workflows:/app/workflows:ro
      - outputs:/app/outputs
    environment:
      - CUDA_VISIBLE_DEVICES=0,1,2,3
      - NVIDIA_VISIBLE_DEVICES=all
      - SECRET_KEY=${SECRET_KEY}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - media_network

  redis:
    image: redis:7-alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
      --appendonly yes
      --appendfsync everysec
      --no-appendfsync-on-rewrite yes
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --protected-mode yes
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - media_network

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
      - ./logs/prometheus:/var/log/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - media_network

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - ./config/grafana:/etc/grafana
      - grafana_data:/var/lib/grafana
      - ./logs/grafana:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - media_network

  comfyui:
    user: "1000:1000"
    volumes:
      - ./models:/models:rw

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  media_network:
    driver: bridge

volumes:
  models:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/models
      o: bind 